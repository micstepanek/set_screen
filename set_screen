#!/usr/bin/env python3
#2
import tkinter
import subprocess
import os
import pickle
     
class Redshift:
    def __init__(self):
        try:
            with open(get_absolute_path('pickle_file'), 'rb') as pickle_file:
                self.data = pickle.load(pickle_file)
        except (FileNotFoundError, EOFError):
            self.data = Default()

    def change(self, key):
        if key.keysym in ('b', 'k'):
            self.data.brightness = self.data.brightness + 3 
            if self.data.brightness > 100:
                self.data.brightness = 100
        elif key.keysym in ('d', 'j'):
            self.data.brightness = self.data.brightness - 3 
        elif key.keysym in ('w', 'h'):
            self.data.temperature = self.data.temperature - 100
        elif key.keysym in ('c', 'l'):
            self.data.temperature = self.data.temperature + 100
        elif key.keysym in ('r'):
            subprocess.run(['redshift', '-x'])
            return
        elif key.keysym in ('1', 'o', 'f'):
            self.data.brightness = 100 
        elif key.keysym == 'Escape':
            self.remember()
            root.destroy()
            return
        else:
            return
        subprocess.run(['redshift',
             '-O', str(self.data.temperature),
             '-b', str(self.data.brightness /100)])

    def remember(self):
        with open(get_absolute_path('pickle_file'), 'wb') as pickle_file:
            pickle.dump(self.data, pickle_file)


def get_absolute_path(relative_path):
    this_file_path = os.path.realpath(__file__) 
    this_file_directory = os.path.dirname(this_file_path)
    absolute_path = os.path.join(this_file_directory, relative_path)
    return absolute_path

class Hints:
    def __init__(self):
        self.label = tkinter.Label(root, text='''Controls:
brighter b,k
darker   d,j
warmer   w,h
colder   c,l
bright   1,o,f
reset    r''')
        self.label.pack()
        

class Default:
    def __init__(self):
        self.brightness = 100
        self.temperature = 3500 
 

root = tkinter.Tk()
rs = Redshift()
root.bind('<Key>', rs.change)
root.title('screen')
root.attributes('-type', 'dialog')
h = Hints()
root.mainloop()
